# Base configuration for language-agnostic hooks
# These hooks can be used across any project regardless of programming language

pre-commit:
  commands:
    format:
      # Simple formatting fixes: remove trailing whitespace and ensure final newline
      run: ./scripts/format-fix.sh {staged_files} && git add {staged_files}
      glob: "*"
      exclude: "*.{png,jpg,jpeg,gif,ico,pdf,svg,woff,woff2,ttf,eot}"

    shfmt:
      # Format shell scripts (hybrid detection for better compatibility)
      run: |
        for f in {staged_files}; do
          # Try file command first if available
          if command -v file >/dev/null 2>&1; then
            if file --mime-type "$f" 2>/dev/null | grep -q 'text/x-shellscript'; then
              shfmt -w "$f" && git add "$f"
            fi
          else
            # Fallback to extension and shebang detection
            if [[ "$f" == *.sh ]] || [[ "$f" == *.bash ]]; then
              shfmt -w "$f" && git add "$f"
            elif [[ ! "$f" == *.* ]] && head -n1 "$f" 2>/dev/null | grep -q '^#!/.*\(bash\|sh\)'; then
              shfmt -w "$f" && git add "$f"
            fi
          fi
        done
      glob: "*"
      exclude: "*.{png,jpg,jpeg,gif,ico,pdf,svg,woff,woff2,ttf,eot}"

    shellcheck:
      # Lint shell scripts (hybrid detection for better compatibility)
      run: |
        for f in {staged_files}; do
          # Try file command first if available
          if command -v file >/dev/null 2>&1; then
            if file --mime-type "$f" 2>/dev/null | grep -q 'text/x-shellscript'; then
              shellcheck "$f"
            fi
          else
            # Fallback to extension and shebang detection
            if [[ "$f" == *.sh ]] || [[ "$f" == *.bash ]]; then
              shellcheck "$f"
            elif [[ ! "$f" == *.* ]] && head -n1 "$f" 2>/dev/null | grep -q '^#!/.*\(bash\|sh\)'; then
              shellcheck "$f"
            fi
          fi
        done
      glob: "*"
      exclude: "*.{png,jpg,jpeg,gif,ico,pdf,svg,woff,woff2,ttf,eot}"